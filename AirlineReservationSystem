import java.util.ArrayList;
import java.util.Scanner;

class Flight {
    String flightNumber;
    String destination;
    int capacity;
    int seatsBooked;

    public Flight(String flightNumber, String destination, int capacity) {
        this.flightNumber = flightNumber;
        this.destination = destination;
        this.capacity = capacity;
        this.seatsBooked = 0;
    }

    public boolean isAvailable() {
        return seatsBooked < capacity;
    }

    public void bookSeat() {
        if (isAvailable()) {
            seatsBooked++;
            System.out.println("Seat booked successfully.");
        } else {
            System.out.println("No seats available on this flight.");
        }
    }

    public void cancelSeat() {
        if (seatsBooked > 0) {
            seatsBooked--;
            System.out.println("Seat canceled successfully.");
        } else {
            System.out.println("No bookings to cancel.");
        }
    }

    public String toString() {
        return "Flight Number: " + flightNumber + ", Destination: " + destination + ", Capacity: " + capacity
                + ", Seats Booked: " + seatsBooked;
    }
}

class Customer {
    String name;
    String email;

    public Customer(String name, String email) {
        this.name = name;
        this.email = email;
    }

    public String toString() {
        return "Customer Name: " + name + ", Email: " + email;
    }
}

class ReservationSystem {
    ArrayList<Flight> flights = new ArrayList<>();
    ArrayList<Customer> customers = new ArrayList<>();

    public void addFlight(Flight flight) {
        flights.add(flight);
    }

    public void addCustomer(Customer customer) {
        customers.add(customer);
    }

    public void viewFlights() {
        for (Flight flight : flights) {
            System.out.println(flight);
        }
    }

    public Flight searchFlight(String flightNumber) {
        for (Flight flight : flights) {
            if (flight.flightNumber.equals(flightNumber)) {
                return flight;
            }
        }
        return null;
    }

    public void bookSeat(String flightNumber) {
        Flight flight = searchFlight(flightNumber);
        if (flight != null) {
            flight.bookSeat();
        } else {
            System.out.println("Flight not found.");
        }
    }

    public void cancelSeat(String flightNumber) {
        Flight flight = searchFlight(flightNumber);
        if (flight != null) {
            flight.cancelSeat();
        } else {
            System.out.println("Flight not found.");
        }
    }

    public void viewCustomers() {
        for (Customer customer : customers) {
            System.out.println(customer);
        }
    }
}

public class AirlineReservationSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ReservationSystem system = new ReservationSystem();

        system.addFlight(new Flight("AI101", "New York", 200));
        system.addFlight(new Flight("AI102", "London", 150));
        system.addFlight(new Flight("AI103", "Dubai", 100));

        system.addCustomer(new Customer("Alice", "alice@example.com"));
        system.addCustomer(new Customer("Bob", "bob@example.com"));

        while (true) {
            System.out.println("\nAirline Reservation System:");
            System.out.println("1. View Flights");
            System.out.println("2. View Customers");
            System.out.println("3. Book a Flight");
            System.out.println("4. Cancel a Flight");
            System.out.println("5. Exit");
            System.out.print("Choose an option: ");
            int option = scanner.nextInt();

            switch (option) {
                case 1:
                    system.viewFlights();
                    break;
                case 2:
                    system.viewCustomers();
                    break;
                case 3:
                    System.out.print("Enter flight number to book: ");
                    String flightNumber = scanner.next();
                    system.bookSeat(flightNumber);
                    break;
                case 4:
                    System.out.print("Enter flight number to cancel: ");
                    String cancelFlightNumber = scanner.next();
                    system.cancelSeat(cancelFlightNumber);
                    break;
                case 5:
                    System.out.println("Exiting...");
                    return;
                default:
                    System.out.println("Invalid option. Try again.");
            }
        }
    }
}

